// ==========================================================================
// Mixins
// ==========================================================================

// Text Color
@mixin text-color {
  @if not (background-color == $white) {
    color: $white;
  }
}


// BEM selectors


// Media queries
@mixin mq($break) {
  @if $break == 's' {
    @media (min-width: $break-small) {
      @content;
    }
  }
  @else if $break == 'm' {
    @media (min-width: $break-medium) {
      @content;
    }
  }
  @else if $break == 'l' {
    @media (min-width: $break-large) {
      @content;
    }
  }
  @else if $break == 'xl' {
    @media (min-width: $break-extra-large) {
      @content;
    }
  }
  @else {
    @error "Break-point #{$break} does not exist, check spelling and remember format is like: 's' or 'xl'.";
  }
}

// Generate modifier color classes


// Generating :before or :after pseudo-element shapes


// Image replacement

      
// Adjacent sibling margins


// Grid Columns
@mixin g-columns($max-width) {
  @for $i from 1 through $g-col-count {
    // Calulate all gutters combined
    $gutters: ($g-gutter-width * ($g-col-count - 1));
    // 
    $col-width: (($max-width - $gutters)/ $g-col-count);
    $cur-width: (($col-width * $i) + ($g-gutter-width * ($i - 1)));
    // Generate column modifier classes
    &--#{($i)} {
      width: percentage($cur-width/$max-width);
    }
  }
}        
        